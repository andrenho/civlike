module;

#include <cstdint>
#include <string>
#include <vector>

export module civlike.ruleset;

import civlike.color;
import civlike.geometry;
import :id;
import :fnval;

export struct Terrain {
    std::string name;
    Color       color;

    struct Id : ::Id<uint8_t> {};
};

export struct UnitType {
    std::string name;
    char        char_display;

    struct Id : ::Id<uint8_t> {};
};

export struct Nation {
    std::string name;
    Color       color;
    bool        playable;

    struct Id : ::Id<uint8_t> {};
};

export struct StartingUnit {
    Nation::Id   nation_id;
    UnitType::Id unit_type_id;
    Point        initial_pos;
};

export struct TerrainSquare {
    Terrain::Id terrain_id;
};
export using Map = std::vector<std::vector<TerrainSquare>>;

export struct GameParameters {};   // TODO - ???

export struct Ruleset {

    const std::vector<Terrain>                terrains;
    const std::vector<Nation>                 nations;
    const std::vector<UnitType>               unit_types;

    const GFnValue<Map>                       map;
    const GFnValue<std::vector<Nation::Id>>   initial_nations;
    const GFnValue<std::vector<StartingUnit>> starting_units;

    static Ruleset create_from_cpp(Ruleset&& ruleset) {
        return ruleset;
    }
};